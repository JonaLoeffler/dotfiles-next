#!/bin/bash

path="/home/jona/Code/applying-apis"
session="msr"

# Check if the session exists, discarding output
# We can check $? for the exit status (zero for success, non-zero for failure)
tmux has-session -t $session 2>/dev/null

if [ $? != 0 ]
then
    tmux new-session -d -s $session -c $path

    window=1
    tmux rename-window -t $session:$window 'run'
    tmux send-keys -t $session:$window 'zsh -c "source env/bin/activate ; nvim . "' C-m
    tmux split-window -t $session:$window -c $path -h
    tmux send-keys -t $session:$window 'zsh -c "source env/bin/activate ; ipython"' C-m
    tmux split-window -t $session:$window -c $path -v
    tmux send-keys -t $session:$window 'gotop' C-m

    window=2
    tmux new-window -t $session:$window -c "$path/output" -n 'view'

    #window=1
    #tmux rename-window -t $session:$window 'run'
    #tmux send-keys -t $session:$window 'mvn clean compile exec:java -Dexec.mainClass="de.uni_koblenz.gorjatschev.applyingapis.Application" -Dexec.args="-Xmx=10g"' C-m

    #tmux split-window -t $session:$window -c $path -h 'gotop' C-m
    #tmux split-window -t $session:$window -c $path -v -p 20 'watch "ls output/data | wc -l"'
    #tmux split-window -t $session:$window -c $path -v -p 50 'watch "cat output/repositories_selected/.csv | wc -l"'

    #window=2
    #tmux new-window -t $session:$window -c $path -n 'nvim'
    #tmux send-keys -t $session:$window 'nvim .' C-m
fi

tmux attach-session -t $session:1
